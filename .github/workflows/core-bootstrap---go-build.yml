name: '[Core Bootstrap] Go build'

on:
  push:
    paths:
      - 'core-bootstrap/**'
  pull_request:
    types: [ opened, synchronize, reopened ]
    paths:
      - 'core-bootstrap/**'

jobs:
  build-with-sonar:
    uses: netcracker/qubership-core-infra/.github/workflows/go-build-with-sonar.yaml@v1.0.6
    with:
      actor: ${{ github.actor }}
      sonar-project-key: ${{ vars.SONAR_PROJECT_KEY_CORE_BOOTSTRAP }}
      go-module-dir: core-bootstrap
    secrets:
      sonar-token: ${{ secrets.SONAR_TOKEN }}

  prepare-version:
    runs-on: ubuntu-latest
    needs: [ build-with-sonar ]
    outputs:
      tags: "${{ steps.prepare_tags.outputs.tags }}"
    steps:
      - name: Get configuration file
        run: |
          curl https://raw.githubusercontent.com/Netcracker/qubership-core-infra/main/.github/metadata-action-go-config.yml -o metadata-action-go-config.yml

      - name: Create name
        uses: netcracker/qubership-workflow-hub/actions/metadata-action@main
        id: metadata
        with:
          configuration-path: metadata-action-go-config.yml
          short-sha: 7
          default-template: "{{ref-name}}-{{timestamp}}-{{github.context.runNumber}}, {{ref-name}}-{{short-sha}}, {{ref-name}}-snapshot"

      - name: Echo metadata
        run: echo "Metadata result ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Prepare tags
        id: prepare_tags
        run: |
          TAGS="${{ steps.metadata.outputs.result }}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "tags: ${TAGS}" >> $GITHUB_STEP_SUMMARY
          echo "github.head_ref = ${{ github.head_ref }}"

  docker-build:
    runs-on: ubuntu-latest
    needs: [ prepare-version ]
    steps:
      - name: Docker
        uses: netcracker/qubership-workflow-hub/actions/docker-action@v1.0.3
        with:
          component: |
            [
              {
                "name": "core-bootstrap", 
                "file": "core-bootstrap/Dockerfile", 
                "context": "./core-bootstrap"
              }
            ]
          platforms: linux/amd64
          ref: ${{ github.ref }}
          download-artifact: false
          tags: ${{ needs.prepare-version.outputs.tags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}